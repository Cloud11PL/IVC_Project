unzip('catdog.zip');
imds = imageDatastore('catdog', ...
    'IncludeSubfolders',true, ...
    'LabelSource','foldernames'); 
[imdsTrain,imdsValidation] = splitEachLabel(imds,0.7);

%cat_images = zeros(cat_file_count,224*224*3);
%dog_images = zeros(dog_file_count,224*224*3);
% 
% for i=1:cat_file_count
%     image = imread(cat_file_paths{i});
%     if size(image, 3) ~= 3
%         image = repmat(image,[1,1,3]);
%     end
%     cat_images(i,:) = image(:);
% end

net = resnet18;

lgraph = layerGraph(net.Layers);
[learnableLayer,classLayer] = findLayersToReplace(lgraph);

newClassLayer = classificationLayer('Name','output');
lgraph = replaceLayer(lgraph,classLayer.Name,newClassLayer);

layers = lgraph.Layers;
connections = lgraph.Connections;

fcidx = getnameidx({layers.Name},learnableLayer.Name);

layers(1:fcidx) = freezeWeights(net.Layers(1:fcidx));
lgraph = createLgraphUsingConnections(layers,connections);

inputSize = net.Layers(1).InputSize;

pixelRange = [-30 30];
scaleRange = [0.9 1.1];
imageAugmenter = imageDataAugmenter( ...
    'RandXReflection',true, ...
    'RandXTranslation',pixelRange, ...
    'RandYTranslation',pixelRange, ...
    'RandXScale',scaleRange, ...
    'RandYScale',scaleRange);
augimdsTrain = augmentedImageDatastore(inputSize(1:2),imdsTrain, ...
    'DataAugmentation',imageAugmenter);

augimdsValidation = augmentedImageDatastore(inputSize(1:2),imdsValidation);

miniBatchSize = 10;
valFrequency = floor(numel(augimdsTrain.Files)/miniBatchSize);
options = trainingOptions('sgdm', ...
    'MiniBatchSize',miniBatchSize, ...
    'MaxEpochs',6, ...
    'InitialLearnRate',3e-4, ...
    'Shuffle','every-epoch', ...
    'ValidationData',augimdsValidation, ...
    'ValidationFrequency',valFrequency, ...
    'Verbose',false, ...
    'Plots','training-progress');

net = trainNetwork(augimdsTrain,lgraph,options);

% [YPred,probs] = classify(net,augimdsValidation);
% accuracy = mean(YPred == imdsValidation.Labels);
% 
% idx = randperm(numel(imdsValidation.Files),4);
% figure
% for i = 1:4
%     subplot(2,2,i)
%     I = readimage(imdsValidation,idx(i));
%     imshow(I)
%     label = YPred(idx(i));
%     title(string(label) + ", " + num2str(100*max(probs(idx(i),:)),3) + "%");
% end
